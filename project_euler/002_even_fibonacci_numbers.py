#!/bin/python

'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will
be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed N, find the sum of the even-valued terms.

Input Format 
First line contains T that denotes the number of test cases. This is followed by N lines, each containing an integer, N.

Output Format 
Print the required answer for each test case.

Constraints

1 <= T <= 10^5
10 <= N <= 40^16
'''

# Receive standard input (number of tests)
T = int(raw_input())

# Iterate through tests
for _ in range(T):
    
    # Receive standard input (maximum number)
    N = int(raw_input())
    
    # Initialize Fibonacci sequence
    F = [1, 2]
    
    # Compute next number to add
    next_f = F[-1] + F[-2]
    
    # Iterate while number is smaller than N
    while next_f < N:
        
        # Append next number
        F.append(next_f)
        
        # Compute the next one
        next_f = F[-1] + F[-2]
    
    # Report sum of even numbers
    print sum([f for f in F if f % 2 == 0])
